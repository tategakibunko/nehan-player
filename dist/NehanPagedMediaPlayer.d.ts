import { CssStyleSheet, WritingMode, PhysicalSize, LayoutSection } from 'nehan';
import { PagedMediaPlayer, PagedMediaPlayerConfig, PlayerSection } from './PagedMediaPlayer';
import { ScreenLayout, PlayerWritingMode } from './PlayerLayout';
import { NehanPlayer, PlayerAttributes } from './NehanPlayerElement';
export declare class NehanPagedMediaPlayer implements PagedMediaPlayer {
    private config;
    $host: NehanPlayer;
    private $shadow;
    readonly content: string;
    readonly layout: ScreenLayout;
    private nehanWritingMode;
    private size;
    readonly fontSize: number;
    private fontFamily;
    pageIndex: number;
    private pageSize;
    private screenPageCount;
    private pageOrder;
    private nehanBodyStyle;
    private $screen;
    private $pageNo;
    private $pageCount;
    private $gotoLeft;
    private $gotoRight;
    private $pages;
    private $slider;
    private $sliderRange;
    private $title;
    private $subTitle;
    private reader;
    constructor(config: PagedMediaPlayerConfig, $host: NehanPlayer, $shadow: ShadowRoot, content: string, layout: ScreenLayout, nehanWritingMode: WritingMode, size: PhysicalSize, fontSize: number, fontFamily: string, pageIndex?: number, pageSize?: PhysicalSize, screenPageCount?: number, pageOrder?: number[], nehanBodyStyle?: CssStyleSheet, $screen?: HTMLElement, $pageNo?: HTMLElement, $pageCount?: HTMLElement, $gotoLeft?: HTMLElement, $gotoRight?: HTMLElement, $pages?: HTMLElement[], $slider?: HTMLElement, $sliderRange?: HTMLInputElement, $title?: HTMLElement, $subTitle?: HTMLElement);
    get id(): string;
    get src(): string;
    get width(): number;
    get height(): number;
    get writingMode(): PlayerWritingMode;
    get currentPageIndex(): number;
    set currentPageIndex(index: number);
    get currentSection(): PlayerSection;
    get pageCount(): number;
    setTitle(title: string): void;
    setSubTitle(subTitle: string): void;
    createOutline(onClickTocItem?: (section: LayoutSection) => void): HTMLElement;
    refresh(throttle?: boolean): void;
    update(attrs: PlayerAttributes): void;
    gotoLeftPage(): void;
    gotoRightPage(): void;
    gotoNextPage(): void;
    gotoPrevPage(): void;
    private getNombrePageNo;
    private getNombrePageCount;
    gotoPage(pageIndex: number): void;
}
